package com.trailblazers.freewheelers.service.impl;

import org.junit.Test;
import org.mockito.ArgumentMatcher;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.util.Map;

import static org.junit.Assert.assertEquals;
import static org.mockito.Matchers.argThat;
import static org.mockito.Mockito.*;

public class ImageUploadServiceImplTest {

    public static final String IMAGE_NAME = "freewheeler.png";

    @Test
    public void shouldReturnImageInformation() throws Exception {
        MultipartFile multipartFile = mock(MultipartFile.class);
        when(multipartFile.getOriginalFilename()).thenReturn("freewheeler.png");
        when(multipartFile.getSize()).thenReturn(Long.valueOf(1024));
        ImageUploadServiceImpl imageUploadService = new ImageUploadServiceImpl();

        Map<String, String> imageMeta = imageUploadService.saveToTmp(multipartFile);
        assertEquals(IMAGE_NAME, imageMeta.get("name"));
        assertEquals("1024", imageMeta.get("size"));
        assertEquals(36, imageMeta.get("uuidName").replace("_" + IMAGE_NAME, "").length());
        File file = new File(imageUploadService.getTmpUploadDirection() + "/" + imageMeta.get("uuidName"));
        FileMatcher matcher = new FileMatcher(file);
        verify(multipartFile).transferTo(argThat(matcher));
    }

    class FileMatcher extends ArgumentMatcher<File> {
        private File file;
        public FileMatcher(File file) {
            this.file = file;
        }

        @Override
        public boolean matches(Object o) {
            File oF = (File) o;
            return file.getPath().equals(oF.getPath());
        }
    }
}
